class Solution {
public:
    int minSetSize(vector<int>& arr) {

        unordered_map<int,int> mp;
        priority_queue<pair<int,int>> pq;
        int n=arr.size();

        for(int i=0;i<n;i++)
          mp[arr[i]]++;


        for(auto ele : mp )
            pq.push({ele.second,ele.first});


// at least half of the integers
// sz should be greater than or equal 2

        int sz=0;
        int setCount=0;

        while(!pq.empty()){

            auto front=pq.top();
            sz += front.first;
            pq.pop();
            setCount++; 

            if(sz >= n/2)
             return setCount;
        
     
        }

        return 0;

        
    }
};




// frequency Map - ele, occurence
// priority_queue - occ - ele



